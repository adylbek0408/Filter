version: '3.8'
services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - django

  django:
    build: .
    env_file: .env
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    entrypoint: /app/entrypoint.sh
    command: gunicorn --bind 0.0.0.0:8000 FILTER.wsgi:application
    depends_on:
      postgres:
        condition: service_healthy

  bot:
    build: .
    env_file: .env
    command: python /app/bot.py
    depends_on:
      - postgres

  postgres:
    image: postgres:13-alpine
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  static_volume:
  media_volume:


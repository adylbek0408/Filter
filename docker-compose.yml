services:
  # База данных PostgreSQL
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Django приложение
  web:
    build: .
    restart: always
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
    command: gunicorn FILTER.wsgi:application --bind 0.0.0.0:8000

  # Nginx сервер
  nginx:
    image: nginx:1.23
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/var/html/static
      - media_volume:/var/html/media
    depends_on:
      - web
    restart: always

  # Telegram бот
  bot:
    build: .
    restart: always
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      - web
    env_file:
      - .env
    command: python application/bot.py

volumes:
  postgres_data:
  static_volume:
  media_volume:

